# Initial pyproject.toml for Phentrieve

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "phentrieve"
version = "0.2.0" # Initial CLI version
description = "A CLI tool for retrieving Human Phenotype Ontology (HPO) terms from clinical text using multilingual embeddings."
readme = "README.md"
license = { file = "LICENSE" }
authors = [
    { name = "Bernt Popp", email = "bernt.popp@example.com" }, # Placeholder: Update email
]
requires-python = ">=3.9" # Verify minimum Python version needed
classifiers = [
    "Development Status :: 3 - Alpha", # Starting point
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
    "Environment :: Console",
]
dependencies = [
    "sentence-transformers>=2.2.2",
    "chromadb>=0.4.18",
    "requests>=2.31.0",
    "pysbd>=0.3.4",
    "tqdm>=4.66.1",
    "pandas>=2.0.0",
    "torch>=2.0.0",
    "numpy>=1.23.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    "typer[all]>=0.9.0",
    "PyYAML>=6.0"
]

[project.scripts]
phentrieve = "phentrieve.cli:app"

[project.optional-dependencies]
text_processing = [
    "spacy>=3.6.0",
    "en_core_web_sm @ https://github.com/explosion/spacy-models/releases/download/en_core_web_sm-3.6.0/en_core_web_sm-3.6.0-py3-none-any.whl"
]

[tool.setuptools]

[tool.setuptools.packages.find]
where = ["."]
include = ["phentrieve*", "api*"]
# exclude = ["tests*"] # Uncomment if/when you add tests

[tool.setuptools.package-data]
"phentrieve.text_processing.default_lang_resources" = ["*.json"]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | env
  | venv
)/
'''
force-exclude = '''
/(
  __pycache__
)/
'''

[tool.pytest.ini_options]
python_files = ["test_*.py", "*_test.py", "tests.py"]
testpaths = ["tests"]
norecursedirs = [
    ".*",       # Ignore hidden directories like .git, .vscode, .venv, .pytest_cache
    "build",
    "dist",
    "docs",
    "data",     # Ignore the 'data' directory (and thus 'data/hf_cache')
    "venv",
    "env",
    "*.egg-info",
    "phentrieve", # Ignore the main application source directory
    "api",      # Ignore the API source directory
]
