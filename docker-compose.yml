services:
  phentrieve_api:
    build:
      context: .
      dockerfile: api/Dockerfile
    env_file:
      - .env.docker 
    volumes:
      - ${PHENTRIEVE_HOST_DATA_DIR}:/phentrieve_data_mount
      - ./phentrieve:/app/phentrieve   # For development: Live reload
      - ./api:/app/api                # For development: Live reload
      - ${PHENTRIEVE_HOST_HF_CACHE_DIR:-${PHENTRIEVE_HOST_DATA_DIR}/hf_cache}:/root/.cache/huggingface # HF Cache
    environment:
      - PHENTRIEVE_DATA_ROOT_DIR=/phentrieve_data_mount
      - LOG_LEVEL=${LOG_LEVEL_API:-INFO}
      - PYTHONPATH=/app
      # Point Hugging Face libs to the mounted cache
      - HF_HOME=/root/.cache/huggingface 
      - TRANSFORMERS_CACHE=/root/.cache/huggingface/hub
      # SENTENCE_TRANSFORMERS_HOME also often defaults to HF_HOME or TRANSFORMERS_CACHE
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/api/v1/health || exit 1"]
      interval: 30s    # How often to run the check
      timeout: 10s     # How long to wait for a response
      retries: 5       # How many times to retry on failure before marking as unhealthy
      start_period: 180s # Grace period for the service to start up before health checks begin
    restart: unless-stopped
    networks:
      - phentrieve_internal_net
      - npm_proxy_network

  phentrieve_frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        # This VITE_API_URL should be the public URL when building for NPM deployment
        # It will be overridden by docker-compose.dev.yml for local direct access
        VITE_API_URL: ${VITE_API_URL_PUBLIC} 
    env_file:
      - .env.docker 
    # No ports exposed directly here; NPM will handle it
    depends_on:
      phentrieve_api:
        condition: service_healthy # Waits for API to be healthy
    restart: unless-stopped
    networks:
      - phentrieve_internal_net
      - npm_proxy_network

networks:
  phentrieve_internal_net:
    driver: bridge
  npm_proxy_network:
    external: true
    name: ${NPM_SHARED_NETWORK_NAME} # This value comes from your .env.docker file