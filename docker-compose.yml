services:
  phentrieve_api:
    build:
      context: .
      dockerfile: api/Dockerfile
    env_file:
      - .env.docker
    volumes:
      - ${PHENTRIEVE_HOST_DATA_DIR}:/phentrieve_data_mount
      - ./phentrieve:/app/phentrieve # Development: Live reload
      - ./api:/app/api             # Development: Live reload
      # Mount Hugging Face cache directory from host to container's expected cache location
      - ${PHENTRIEVE_HOST_HF_CACHE_DIR:-/phentrieve_data_mount/hf_cache_default}:/root/.cache/huggingface
    environment:
      - PHENTRIEVE_DATA_ROOT_DIR=/phentrieve_data_mount
      - LOG_LEVEL=${LOG_LEVEL_API:-INFO}
      - PYTHONPATH=/app
      # Explicitly tell Hugging Face libraries where to find/store models
      - HF_HOME=/root/.cache/huggingface # Points to the mounted volume
      - TRANSFORMERS_CACHE=/root/.cache/huggingface/hub # Often models are under 'hub' subdir
      - SENTENCE_TRANSFORMERS_HOME=/root/.cache/huggingface # ST might also use this
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/api/v1/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 180s
    restart: unless-stopped
    networks:
      - phentrieve_internal_net
      - npm_proxy_network

  phentrieve_frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args: # For passing ENV VARS to Vite build process
        VITE_API_URL: ${VITE_API_URL_PUBLIC}
    env_file:
      - .env.docker
    # No ports needed here if NPM handles it
    depends_on:
      phentrieve_api:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - phentrieve_internal_net
      - npm_proxy_network

networks:
  phentrieve_internal_net:
    driver: bridge
  npm_proxy_network:
    external: true
    name: ${NPM_SHARED_NETWORK_NAME}